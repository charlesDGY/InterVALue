
;; Function add (add, funcdef_no=2, decl_uid=3732, cgraph_uid=2)

add (int a, int b)
{
  int D.3790;

  <bb 2>:
  __builtin_putchar (10);
  D.3790 = a + b;

<L0>:
  return D.3790;

}



;; Function sub (sub, funcdef_no=3, decl_uid=3743, cgraph_uid=3)

sub (int a, int b)
{
  long int d;
  int D.3793;
  int D.3792;

  <bb 2>:
  D.3792 = a - b;
  d = (long int) D.3792;
  D.3793 = (int) d;

<L0>:
  return D.3793;

}



;; Function hoho (hoho, funcdef_no=4, decl_uid=3750, cgraph_uid=4)

Merging blocks 28 and 29
hoho (int i)
{
  double ss;
  int vv;
  char ma;
  unsigned char pio;
  long unsigned int poi;
  unsigned int pp;
  float noha;
  hhh hoes;
  long unsigned int kj;
  short unsigned int k;
  float haha;
  double t;
  float noteasy;
  int * point;
  int * kk;
  struct node2 * node44;
  struct node3 newnode;
  int a[50];
  int j;
  int val2;
  int val;
  int D;
  char as;
  char ee;
  int D.3833;
  int j.11;
  double D.3831;
  double D.3830;
  double D.3829;
  int j.10;
  int D.3827;
  int j.9;
  int D.3821;
  int D.3818;
  int j.8;
  int j.7;
  int j.6;
  int j.5;
  int j.4;
  int j.3;
  int j.2;
  int D.3804;
  int D.3803;
  float D.3800;
  int glob.1;
  float D.3798;
  float glob2.0;

  <bb 2>:
  ee = 115;
  as = 99;
  if (ee == as)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  ee = 99;

  <bb 4>:
  D = 3;
  glob = 1;
  glob2.0 = glob2;
  D.3798 = glob2.0 - 1.0e+1;
  glob.1 = glob;
  D.3800 = (float) glob.1;
  if (D.3798 == D.3800)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  glob2 = 4.0e+0;

  <bb 6>:
  val = 12;
  val2 = 6;
  j = 32767;
  D.3803 = val + val2;
  D.3804 = D.3803 * val2;
  j.2 = D.3804 - val;
  j = j.2;
  if (i > 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 7>:
  j.3 = j;
  if (j.3 <= 49)
    goto <bb 8>;
  else
    goto <bb 12>;

  <bb 8>:
  goto <bb 10>;

  <bb 9>:
  j.4 = j;
  j.5 = j.4 + 5;
  j = j.5;

  <bb 10>:
  j.6 = j;
  if (j.6 <= 99)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  goto <bb 13>;

  <bb 12>:
  j.7 = j;
  j.8 = j.7 + -1;
  j = j.8;

  <bb 13>:
  if (val == 5)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  val = val + 1;
  val2 = val % 2;

  <bb 15>:
  a[10] = 100;
  a[39] = 23;
  a[val] = 4;
  D.3818 = a[10];
  if (D.3818 == 100)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  a[32] = 3;

  <bb 17>:
  newnode.a = 4;
  node44 = malloc (16);
  node44->p = 5;
  node44->j = 10;
  kk = malloc (4);
  kk = &j;
  point = kk;
  D.3821 = *point;
  if (D.3821 != 5)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  __builtin_putchar (10);

  <bb 19>:
  noteasy = 5.77999986708164215087890625e-2;
  t = 5.0e+0;
  haha = 1.0e+1;
  k = 5;
  kj = 2;
  hoes = 1;
  noha = 5.00000007450580596923828125e-2;
  pp = 9;
  poi = 3;
  pio = 106;
  if (k == 4)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  __builtin_putchar (10);

  <bb 21>:
  j.9 = j;
  D.3827 = add (i, j.9);
  val = sub (D.3827, val);
  goto <bb 27>;

  <bb 22>:
  switch (val) <default: <L22>, case 3: <L20>, case 8: <L21>>

<L20>:
  i = j;
  j = 2;
  goto <bb 26>;

<L21>:
  i = i + 1;
  j = 6;
  goto <bb 26>;

<L22>:
  i = 0;

  <bb 26>:
  i = -2;

  <bb 27>:
  if (i > 0)
    goto <bb 22>;
  else
    goto <bb 28>;

  <bb 28>:
  j.10 = j;
  D.3829 = (double) j.10;
  D.3830 = sqrt (D.3829);
  i = (int) D.3830;
  vv = 4;
  ss = 2.29999999999999982236431605997495353221893310546875e+0;
  D.3831 = floor (ss);
  vv = (int) D.3831;
  j.11 = j;
  printf ("%d\n", j.11);
  D.3833 = 0;
  j = {CLOBBER};
  a = {CLOBBER};
  newnode = {CLOBBER};

<L27>:
  return D.3833;

}


