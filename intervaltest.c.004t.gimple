add (int a, int b)
{
  int D.3785;

  __builtin_putchar (10);
  D.3785 = a + b;
  return D.3785;
}


sub (int a, int b)
{
  int D.3787;
  int D.3788;
  long int d;

  D.3787 = a - b;
  d = (long int) D.3787;
  D.3788 = (int) d;
  return D.3788;
}


hoho (int i)
{
  float glob2.0;
  int D.3793;
  int D.3794;
  int j.1;
  int j.2;
  int j.3;
  int j.4;
  int j.5;
  int j.6;
  int j.7;
  int D.3808;
  int D.3811;
  int j.8;
  int D.3817;
  int j.9;
  double D.3819;
  double D.3820;
  double D.3821;
  int j.10;
  int D.3823;
  int D;
  int val;
  int val2;
  int j;
  int a[50];
  struct node3 newnode;
  struct node2 * node44;
  int * kk;
  int * point;
  float noteasy;
  int vv;
  double ss;

  try
    {
      {
        int woca;
        long int cao;

        woca = 9;
        cao = 32;
      }
      D = 3;
      glob = 1;
      glob2.0 = glob2;
      if (glob2.0 == 4.5e+0) goto <D.3791>; else goto <D.3792>;
      <D.3791>:
      glob2 = 4.0e+0;
      <D.3792>:
      val = 12;
      val2 = 6;
      j = 32767;
      D.3793 = val + val2;
      D.3794 = D.3793 * val2;
      j.1 = D.3794 - val;
      j = j.1;
      if (i > 0) goto <D.3798>; else goto <D.3796>;
      <D.3798>:
      j.2 = j;
      if (j.2 <= 49) goto <D.3800>; else goto <D.3796>;
      <D.3800>:
      goto <D.3759>;
      <D.3758>:
      j.3 = j;
      j.4 = j.3 + 5;
      j = j.4;
      <D.3759>:
      j.5 = j;
      if (j.5 <= 99) goto <D.3758>; else goto <D.3760>;
      <D.3760>:
      goto <D.3797>;
      <D.3796>:
      j.6 = j;
      j.7 = j.6 + -1;
      j = j.7;
      <D.3797>:
      if (val == 5) goto <D.3806>; else goto <D.3807>;
      <D.3806>:
      val = val + 1;
      val2 = val % 2;
      <D.3807>:
      a[10] = 100;
      a[39] = 23;
      a[val] = 4;
      D.3808 = a[10];
      if (D.3808 == 100) goto <D.3809>; else goto <D.3810>;
      <D.3809>:
      a[32] = 3;
      <D.3810>:
      newnode.a = 4;
      node44 = malloc (16);
      node44->p = 5;
      node44->j = 10;
      kk = malloc (4);
      kk = &j;
      point = kk;
      D.3811 = *point;
      if (D.3811 != 5) goto <D.3812>; else goto <D.3813>;
      <D.3812>:
      __builtin_putchar (10);
      <D.3813>:
      noteasy = 5.77999986708164215087890625e-2;
      {
        double j;
        float haha;
        short unsigned int k;
        float noha;
        unsigned int pp;
        long unsigned int poi;
        unsigned char pio;
        char ma;

        j = 5.0e+0;
        haha = 1.0e+1;
        noha = 5.00000007450580596923828125e-2;
        pp = 9;
        poi = 3;
        pio = 106;
        if (k == 4) goto <D.3814>; else goto <D.3815>;
        <D.3814>:
        __builtin_putchar (10);
        <D.3815>:
      }
      j.8 = j;
      D.3817 = add (i, j.8);
      val = sub (D.3817, val);
      goto <D.3780>;
      <D.3779>:
      switch (val) <default: <D.3778>, case 3: <D.3775>, case 8: <D.3777>>
      <D.3775>:
      i = j;
      j = 2;
      goto <D.3776>;
      <D.3777>:
      i = i + 1;
      j = 6;
      goto <D.3776>;
      <D.3778>:
      i = 0;
      <D.3776>:
      i = -2;
      <D.3780>:
      if (i > 0) goto <D.3779>; else goto <D.3781>;
      <D.3781>:
      j.9 = j;
      D.3819 = (double) j.9;
      D.3820 = sqrt (D.3819);
      i = (int) D.3820;
      vv = 4;
      ss = 2.29999999999999982236431605997495353221893310546875e+0;
      D.3821 = floor (ss);
      vv = (int) D.3821;
      j.10 = j;
      printf ("%d\n", j.10);
      D.3823 = 0;
      return D.3823;
    }
  finally
    {
      j = {CLOBBER};
      a = {CLOBBER};
      newnode = {CLOBBER};
    }
}


