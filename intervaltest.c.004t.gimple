add (int a, int b)
{
  int D.3810;

  __builtin_putchar (10);
  D.3810 = a + b;
  return D.3810;
}


sub (int a, int b)
{
  int D.3812;
  int D.3813;
  long int d;

  D.3812 = a - b;
  d = (long int) D.3812;
  D.3813 = (int) d;
  return D.3813;
}


mul (int * a, long int * b)
{
  __builtin_putchar (10);
}


cdiv (const struct node2 a, const struct node2 * b)
{
  __builtin_putchar (10);
}


hoho (int i)
{
  int stac.0;
  int D.3816;
  float glob2.1;
  float D.3820;
  int glob.2;
  float D.3822;
  int D.3825;
  int D.3826;
  int j.3;
  int j.4;
  int j.5;
  int j.6;
  int j.7;
  int j.8;
  int j.9;
  int D.3840;
  int D.3841;
  int D.3844;
  int j.10;
  int D.3850;
  int j.11;
  double D.3852;
  double D.3853;
  double D.3854;
  int j.12;
  static int stac = 2;
  int hae;
  extern long int q2h4;
  const short int shieg;
  long long int youma;
  long long unsigned int youmei;
  char ee;
  char as;
  int D;
  int val;
  int val2;
  int gg;
  int j;
  int a[50];
  struct node3 newnode;
  struct node2 * node44;
  int * kk;
  int * point;
  float noteasy;
  double t;
  float haha;
  short unsigned int k;
  long unsigned int kj;
  typedef struct cang struct struct cang;
  typedef struct cang cang;
  struct cang zzz;
  typedef hhh struct hhh;
  hhh MONDAY = 0;
  hhh THURSDAY = 1;
  hhh hoes;
  float noha;
  unsigned int pp;
  long unsigned int poi;
  unsigned char pio;
  char ma;
  int vv;
  double ss;

  try
    {
      stac.0 = stac;
      hae = stac.0 + 3;
      shieg = 3;
      D.3816 = (int) shieg;
      hae = D.3816 + -4;
      youma = 4;
      youmei = 2;
      ee = 115;
      as = 99;
      if (ee == as) goto <D.3817>; else goto <D.3818>;
      <D.3817>:
      ee = 99;
      <D.3818>:
      D = 3;
      glob = 1;
      glob2.1 = glob2;
      D.3820 = glob2.1 - 1.0e+1;
      glob.2 = glob;
      D.3822 = (float) glob.2;
      if (D.3820 == D.3822) goto <D.3823>; else goto <D.3824>;
      <D.3823>:
      glob2 = 4.0e+0;
      <D.3824>:
      val = 12;
      val2 = 6;
      gg = 2 - val;
      j = 32767;
      D.3825 = val + val2;
      D.3826 = D.3825 * val2;
      j.3 = D.3826 - val;
      j = j.3;
      if (i > 0) goto <D.3830>; else goto <D.3828>;
      <D.3830>:
      j.4 = j;
      if (j.4 <= 49) goto <D.3832>; else goto <D.3828>;
      <D.3832>:
      goto <D.3774>;
      <D.3773>:
      j.5 = j;
      j.6 = j.5 + 5;
      j = j.6;
      <D.3774>:
      j.7 = j;
      if (j.7 <= 99) goto <D.3773>; else goto <D.3775>;
      <D.3775>:
      goto <D.3829>;
      <D.3828>:
      j.8 = j;
      j.9 = j.8 + -1;
      j = j.9;
      <D.3829>:
      if (val == 5) goto <D.3838>; else goto <D.3839>;
      <D.3838>:
      val = val + 1;
      val2 = val % 2;
      D.3840 = 0;
      return D.3840;
      <D.3839>:
      a[10] = 100;
      a[39] = 23;
      a[val] = 4;
      D.3841 = a[10];
      if (D.3841 == 100) goto <D.3842>; else goto <D.3843>;
      <D.3842>:
      a[32] = 3;
      <D.3843>:
      newnode.a = 4;
      node44 = malloc (16);
      node44->p = 5;
      node44->j = 10;
      kk = malloc (4);
      kk = &j;
      point = kk;
      D.3844 = *point;
      if (D.3844 != 5) goto <D.3845>; else goto <D.3846>;
      <D.3845>:
      __builtin_putchar (10);
      <D.3846>:
      noteasy = 5.77999986708164215087890625e-2;
      t = 5.0e+0;
      haha = 1.0e+1;
      k = 5;
      kj = 2;
      zzz.l = 10;
      hoes = 1;
      noha = 5.00000007450580596923828125e-2;
      pp = 9;
      poi = 3;
      pio = 106;
      if (k == 4) goto <D.3847>; else goto <D.3848>;
      <D.3847>:
      __builtin_putchar (10);
      <D.3848>:
      j.10 = j;
      D.3850 = add (i, j.10);
      val = sub (D.3850, val);
      goto <D.3804>;
      <D.3803>:
      switch (val) <default: <D.3802>, case 3: <D.3799>, case 8: <D.3801>>
      <D.3799>:
      i = j;
      j = 2;
      goto <D.3800>;
      <D.3801>:
      i = i + 1;
      j = 6;
      goto <D.3800>;
      <D.3802>:
      i = 0;
      <D.3800>:
      i = -2;
      <D.3804>:
      if (i > 0) goto <D.3803>; else goto <D.3805>;
      <D.3805>:
      j.11 = j;
      D.3852 = (double) j.11;
      D.3853 = sqrt (D.3852);
      i = (int) D.3853;
      vv = 4;
      ss = 2.29999999999999982236431605997495353221893310546875e+0;
      D.3854 = floor (ss);
      vv = (int) D.3854;
      j.12 = j;
      printf ("%d\n", j.12);
      D.3840 = 0;
      return D.3840;
    }
  finally
    {
      j = {CLOBBER};
      a = {CLOBBER};
      newnode = {CLOBBER};
      zzz = {CLOBBER};
    }
}


